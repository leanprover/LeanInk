[{"contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw":
    "/-|\nCopyright (c) 2014 Microsoft Corporation. All rights reserved.\nReleased under Apache 2.0 license as described in the file LICENSE.\nAuthor: Leonardo de Moura, Jeremy Avigad, Haitao Zhang\n|-/\n-- a port of core Lean `init/function.lean`\n\n/-!\n# General operations on functions\n-/\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "namespace",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " Function\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "variable",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "Sort u₁", "_type": "typeinfo"},
    "semanticType": "Keyword",
    "raw": "Sort",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "Sort u₁", "_type": "typeinfo"},
    "semanticType": null,
    "raw": " u₁",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "Sort u₂", "_type": "typeinfo"},
    "semanticType": "Keyword",
    "raw": "Sort",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "Sort u₂", "_type": "typeinfo"},
    "semanticType": null,
    "raw": " u₂",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "Sort u₃", "_type": "typeinfo"},
    "semanticType": "Keyword",
    "raw": "Sort",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "Sort u₃", "_type": "typeinfo"},
    "semanticType": null,
    "raw": " u₃",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₄", "name": "δ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "δ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₄", "name": "Sort u₄", "_type": "typeinfo"},
    "semanticType": "Keyword",
    "raw": "Sort",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₄", "name": "Sort u₄", "_type": "typeinfo"},
    "semanticType": null,
    "raw": " u₄",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "ζ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "ζ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "Sort u₁", "_type": "typeinfo"},
    "semanticType": "Keyword",
    "raw": "Sort",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "Sort u₁", "_type": "typeinfo"},
    "semanticType": null,
    "raw": " u₁",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "}\n\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "{α : Sort u₁} → {β : Sort u₂} → (β → β → β) → (α → β) → β → α → β",
     "name": "comp_right",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "comp_right",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → β → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → β → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(β → β → β) → (α → β) → α → β → β",
     "name": "comp_left",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "comp_left",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → β → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → β → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "\n\n/-- Given functions `f : β → β → φ` and `g : α → β`, produce a function `α → α → φ` that evaluates\n`g` on each argument, then applies `f` to the results. Can be used, e.g., to transfer a relation\nfrom `β` to `α`. -/\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(β → β → φ) → (α → β) → α → α → φ",
     "name": "on_fun",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "on_fun",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(α → β → φ) → (φ → δ → ζ) → (α → β → δ) → α → β → ζ",
     "name": "combine",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "combine",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ → δ → ζ", "name": "op", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "op",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₄", "name": "δ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "δ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "ζ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "ζ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → δ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₄", "name": "δ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "δ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n  : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "ζ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "ζ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ → δ → ζ", "name": "op", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "op",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → δ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "{φ : α → β → Sort u₃} → ((x : α) → (y : β) → φ x y) → (y : β) → (x : α) → φ x y",
     "name": "swap",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "swap",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "Sort u₃", "_type": "typeinfo"},
    "semanticType": "Keyword",
    "raw": "Sort",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "Sort u₃", "_type": "typeinfo"},
    "semanticType": null,
    "raw": " u₃",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(x : α) → (y : β) → φ x y", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ∀ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ∀ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(x : α) → (y : β) → φ x y", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{β : α → Sort u₂} → ((x : α) → β x) → (x : α) → β x",
     "name": "app",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "app",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "Sort u₂", "_type": "typeinfo"},
    "semanticType": "Keyword",
    "raw": "Sort",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "Sort u₂", "_type": "typeinfo"},
    "semanticType": null,
    "raw": " u₂",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "(x : α) → β x", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ∀ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "(x : α) → β x", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁} {β : Sort u₂} (f : α → β), id ∘ f = f",
     "name": "left_id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "left_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort (imax u₁ u₂)} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ (f : α → β), f ∘ id = f",
     "name": "right_id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "right_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort (imax u₁ u₂)} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n@[",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "simp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ (f : β → φ) (g : α → β) (a : α), comp f g a = f (g a)",
     "name": "comp_app",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "comp_app",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₃} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {φ : Sort u₃} {δ : Sort u₄} (f : φ → δ) (g : β → φ) (h : α → β), (f ∘ g) ∘ h = f ∘ g ∘ h",
     "name": "comp.assoc",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "comp.assoc",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ → δ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₄", "name": "δ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "δ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ → δ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ → δ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort (imax u₁ u₄)} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n@[",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "simp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁} {β : Sort u₂} (f : α → β), id ∘ f = f",
     "name": "comp.left_id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "comp.left_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort (imax u₁ u₂)} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n@[",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "simp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁} {β : Sort u₂} (f : α → β), f ∘ id = f",
     "name": "comp.right_id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "comp.right_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort (imax u₁ u₂)} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ (f : β → φ) (b : β), f ∘ const α b = const α (f b)",
     "name": "comp_const_right",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "comp_const_right",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → (β : Sort u₁) → α → β → α",
     "name": "const",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "const",
    "link": null,
    "docstring":
    "The constant function. If `a : α`, then `Function.const β a : β → α` is the\n\"constant function with value `a`\", that is, `Function.const β a b = a`.\n```\nexample (b : Bool) : Function.const Bool 10 b = 10 :=\n  rfl\n\n#check Function.const Bool 10\n-- Bool → Nat\n```\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₃} → (β : Sort u₁) → α → β → α",
     "name": "const",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "const",
    "link": null,
    "docstring":
    "The constant function. If `a : α`, then `Function.const β a : β → α` is the\n\"constant function with value `a`\", that is, `Function.const β a b = a`.\n```\nexample (b : Bool) : Function.const Bool 10 b = 10 :=\n  rfl\n\n#check Function.const Bool 10\n-- Bool → Nat\n```\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort (imax u₁ u₃)} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "\n\n/-- A function `f : α → β` is called injective if `f x = f y` implies `x = y`. -/\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(α → β) → Prop", "name": "injective", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "injective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type", "name": "Prop", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Prop",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ∀ {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a₁", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a₁",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a₂", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a₂",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "}, ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a₁", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a₁",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a₂", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a₂",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a₁", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a₁",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a₂", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a₂",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {g : β → φ} {f : α → β}, injective g → injective f → injective (g ∘ f)",
     "name": "injective.comp",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "injective.comp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective g", "name": "hg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hg",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₃} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective f", "name": "hf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") :\n  ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₃} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "Function.comp g f a₁✝ = Function.comp g f a₂✝",
     "name": "h",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective f", "name": "hf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective g", "name": "hg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hg",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "Function.comp g f a₁✝ = Function.comp g f a₂✝",
     "name": "h",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    ")\n\n/-- A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. -/\n@[reducible] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(α → β) → Prop", "name": "surjective", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "surjective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type", "name": "Prop", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Prop",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ∀ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ∃ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {φ : Sort u₃} {g : β → φ} {f : α → β}, surjective g → surjective f → surjective (g ∘ f)",
     "name": "surjective.comp",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "surjective.comp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "surjective g", "name": "hg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hg",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₃} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "surjective f", "name": "hf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") :\n  ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₃} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") :=\nλ (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ", "name": "c", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "c",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₂} {p : α → Prop} {b : Prop}, (∃ x, p x) → (∀ (a : α), p a → b) → b",
     "name": "Exists.elim",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Exists.elim",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "surjective g", "name": "hg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hg",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ", "name": "c", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "c",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (λ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "g b = c", "name": "hb", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hb",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {p : α → Prop} {b : Prop}, (∃ x, p x) → (∀ (a : α), p a → b) → b",
     "name": "Exists.elim",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Exists.elim",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "surjective f", "name": "hf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (λ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "f a = b", "name": "ha", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "ha",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " =>\n  ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁} {p : α → Prop} (w : α), p w → Exists p",
     "name": "Exists.intro",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Exists.intro",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "show",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "φ", "name": "c", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "c",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "from",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₃} {a b c : α}, a = b → b = c → a = c",
     "name": "Eq.trans",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Eq.trans",
    "link": null,
    "docstring":
    "Equality is transitive: if `a = b` and `b = c` then `a = c`.\n\nBecause this is in the `Eq` namespace, if you variables or expressions\n`h₁ : a = b` and `h₂ : b = c`, you can use `h₁.trans h₂ : a = c` as shorthand\nfor `Eq.trans h₁ h₃`.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₂} {β : Sort u₃} {a₁ a₂ : α} (f : α → β), a₁ = a₂ → f a₁ = f a₂",
     "name": "congrArg",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "congrArg",
    "link": null,
    "docstring":
    "Congruence in the function argument: if `a₁ = a₂` then `f a₁ = f a₂` for\nany (nondependent) function `f`. This is more powerful than it might look at first, because\nyou can also use a lambda expression for `f` to prove that\n`<something containing a₁> = <something containing a₂>`. This function is used\ninternally by tactics like `congr` and `simp` to apply equalities inside\nsubterms.\n\nFor more information: [Equality](https://leanprover.github.io/theorem_proving_in_lean4/quantifiers_and_equality.html#equality)\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "f a = b", "name": "ha", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "ha",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "g b = c", "name": "hb", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hb",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "))))\n\n/-- A function is called bijective if it is both injective and surjective. -/\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(α → β) → Prop", "name": "bijective", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "bijective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∧ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {φ : Sort u₃} {g : β → φ} {f : α → β}, bijective g → bijective f → bijective (g ∘ f)",
     "name": "bijective.comp",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "bijective.comp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₃} → (α → β) → Prop",
     "name": "bijective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "bijective",
    "link": null,
    "docstring":
    "A function is called bijective if it is both injective and surjective. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "bijective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "bijective",
    "link": null,
    "docstring":
    "A function is called bijective if it is both injective and surjective. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₃} → (α → β) → Prop",
     "name": "bijective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "bijective",
    "link": null,
    "docstring":
    "A function is called bijective if it is both injective and surjective. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → φ", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n| ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective g", "name": "h_ginj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_ginj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "surjective g", "name": "h_gsurj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_gsurj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "⟩, ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective f", "name": "h_finj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_finj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "surjective f", "name": "h_fsurj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_fsurj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "⟩ => ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective g", "name": "h_ginj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_ginj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ".",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {φ : Sort u₃} {g : β → φ} {f : α → β}, injective g → injective f → injective (g ∘ f)",
     "name": "comp",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "comp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective f", "name": "h_finj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_finj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "surjective g", "name": "h_gsurj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_gsurj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ".",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {φ : Sort u₃} {g : β → φ} {f : α → β}, surjective g → surjective f → surjective (g ∘ f)",
     "name": "comp",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "comp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "surjective f", "name": "h_fsurj", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h_fsurj",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "⟩\n\n/-- `left_inverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. -/\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(β → α) → (α → β) → Prop",
     "name": "left_inverse",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "left_inverse",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type", "name": "Prop", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Prop",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ∀ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "\n\n/-- `has_left_inverse f` means that `f` has an unspecified left inverse. -/\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(α → β) → Prop", "name": "has_left_inverse", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "has_left_inverse",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type", "name": "Prop", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Prop",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ∃ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "finv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "finv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (β → α) → (α → β) → Prop",
     "name": "left_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "left_inverse",
    "link": null,
    "docstring":
    "`left_inverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "finv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "finv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "\n\n/-- `right_inverse g f` means that g is a right inverse to f. That is, `f ∘ g = id`. -/\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(β → α) → (α → β) → Prop",
     "name": "right_inverse",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "right_inverse",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type", "name": "Prop", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Prop",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₁} → (β → α) → (α → β) → Prop",
     "name": "left_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "left_inverse",
    "link": null,
    "docstring":
    "`left_inverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "\n\n/-- `has_right_inverse f` means that `f` has an unspecified right inverse. -/\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(α → β) → Prop",
     "name": "has_right_inverse",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "has_right_inverse",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type", "name": "Prop", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Prop",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " := ∃ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "finv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "finv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (β → α) → (α → β) → Prop",
     "name": "right_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "right_inverse",
    "link": null,
    "docstring":
    "`right_inverse g f` means that g is a right inverse to f. That is, `f ∘ g = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "finv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "finv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {g : β → α} {f : α → β}, left_inverse g f → Function.injective f",
     "name": "left_inverse.injective",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "left_inverse.injective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (β → α) → (α → β) → Prop",
     "name": "left_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "left_inverse",
    "link": null,
    "docstring":
    "`left_inverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "left_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "f a = f b", "name": "hf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "left_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ▸ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "left_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ▸ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "f a = f b", "name": "hf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ▸ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {f : α → β}, has_left_inverse f → Function.injective f",
     "name": "has_left_inverse.injective",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "has_left_inverse.injective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "has_left_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "has_left_inverse",
    "link": null,
    "docstring":
    "`has_left_inverse f` means that `f` has an unspecified left inverse. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "has_left_inverse f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort (imax u₂ u₁)} {p : α → Prop} {b : Prop}, (∃ x, p x) → (∀ (a : α), p a → b) → b",
     "name": "Exists.elim",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Exists.elim",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "has_left_inverse f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (λ ",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "text"},
 {"messages":
  [{"contents": "Warning: unused variable `finv` [linter.unusedVariables]",
    "_type": "message"}],
  "goals": [],
  "contents":
  [{"typeinfo": {"type": "β → α", "name": "finv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "finv",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "sentence"},
 {"contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "left_inverse finv f", "name": "inv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "inv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "left_inverse finv f", "name": "inv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "inv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ".",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {g : β → α} {f : α → β}, left_inverse g f → Function.injective f",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {f : α → β} {g : β → α}, injective f → left_inverse f g → right_inverse f g",
     "name": "right_inverse_of_injective_of_left_inverse",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "right_inverse_of_injective_of_left_inverse",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "}\n    (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective f", "name": "injf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "injf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "left_inverse f g", "name": "lfg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "lfg",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₁} → (β → α) → (α → β) → Prop",
     "name": "left_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "left_inverse",
    "link": null,
    "docstring":
    "`left_inverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") :\n  ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₁} → (β → α) → (α → β) → Prop",
     "name": "right_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "right_inverse",
    "link": null,
    "docstring":
    "`right_inverse g f` means that g is a right inverse to f. That is, `f ∘ g = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "injective f", "name": "injf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "injf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " $ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "left_inverse f g", "name": "lfg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "lfg",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " $ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {f : α → β} {g : β → α}, right_inverse g f → Function.surjective f",
     "name": "right_inverse.surjective",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "right_inverse.surjective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "right_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (β → α) → (α → β) → Prop",
     "name": "right_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "right_inverse",
    "link": null,
    "docstring":
    "`right_inverse g f` means that g is a right inverse to f. That is, `f ∘ g = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "right_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "⟩\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {f : α → β}, has_right_inverse f → Function.surjective f",
     "name": "has_right_inverse.surjective",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "has_right_inverse.surjective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "has_right_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "has_right_inverse",
    "link": null,
    "docstring":
    "`has_right_inverse f` means that `f` has an unspecified right inverse. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n| ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "text"},
 {"messages":
  [{"contents": "Warning: unused variable `finv` [linter.unusedVariables]",
    "_type": "message"}],
  "goals": [],
  "contents":
  [{"typeinfo": {"type": "β → α", "name": "finv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "finv",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "sentence"},
 {"contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "right_inverse finv f", "name": "inv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "inv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "⟩ => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "right_inverse finv f", "name": "inv", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "inv",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ".",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Sort u₁} {β : Sort u₂} {f : α → β} {g : β → α}, right_inverse g f → Function.surjective f",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {f : α → β} {g : β → α}, surjective f → right_inverse f g → left_inverse f g",
     "name": "left_inverse_of_surjective_of_right_inverse",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "left_inverse_of_surjective_of_right_inverse",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "surjective f", "name": "surjf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "surjf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → {β : Sort u₂} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n  (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "right_inverse f g", "name": "rfg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "rfg",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₁} → (β → α) → (α → β) → Prop",
     "name": "right_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "right_inverse",
    "link": null,
    "docstring":
    "`right_inverse g f` means that g is a right inverse to f. That is, `f ∘ g = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₂} → {β : Sort u₁} → (β → α) → (α → β) → Prop",
     "name": "left_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "left_inverse",
    "link": null,
    "docstring":
    "`left_inverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " =>\n  ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "let",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "x", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "x",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "f x = y", "name": "hx", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hx",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "⟩ := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "surjective f", "name": "surjf", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "surjf",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "y", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "y",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n  ",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "text"},
 {"messages": [],
  "goals":
  [{"name": "",
    "hypotheses":
    [{"type": "Sort u₁", "names": ["α"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₂", "names": ["β"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₃", "names": ["φ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₄", "names": ["δ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₁", "names": ["ζ"], "body": "", "_type": "hypothesis"},
     {"type": "α → β", "names": ["f"], "body": "", "_type": "hypothesis"},
     {"type": "β → α", "names": ["g"], "body": "", "_type": "hypothesis"},
     {"type": "surjective f",
      "names": ["surjf"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "right_inverse f g",
      "names": ["rfg"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "β", "names": ["y"], "body": "", "_type": "hypothesis"},
     {"type": "α", "names": ["x"], "body": "", "_type": "hypothesis"},
     {"type": "f x = y", "names": ["hx"], "body": "", "_type": "hypothesis"}],
    "conclusion": "f (g y) = y",
    "_type": "goal"}],
  "contents":
  [{"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "by",
    "link": null,
    "docstring":
    "`by tac` constructs a term of the expected type by running the tactic(s) `tac`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring":
    "`by tac` constructs a term of the expected type by running the tactic(s) `tac`. ",
    "_type": "token"}],
  "_type": "sentence"},
 {"messages": [],
  "goals":
  [{"name": "",
    "hypotheses":
    [{"type": "Sort u₁", "names": ["α"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₂", "names": ["β"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₃", "names": ["φ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₄", "names": ["δ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₁", "names": ["ζ"], "body": "", "_type": "hypothesis"},
     {"type": "α → β", "names": ["f"], "body": "", "_type": "hypothesis"},
     {"type": "β → α", "names": ["g"], "body": "", "_type": "hypothesis"},
     {"type": "surjective f",
      "names": ["surjf"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "right_inverse f g",
      "names": ["rfg"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "β", "names": ["y"], "body": "", "_type": "hypothesis"},
     {"type": "α", "names": ["x"], "body": "", "_type": "hypothesis"},
     {"type": "f x = y", "names": ["hx"], "body": "", "_type": "hypothesis"}],
    "conclusion": "f (g y) = y",
    "_type": "goal"}],
  "contents":
  [{"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "rw",
    "link": null,
    "docstring":
    "`rw` is like `rewrite`, but also tries to close the goal by \"cheap\" (reducible) `rfl` afterwards.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " [",
    "link": null,
    "docstring":
    "`rw` is like `rewrite`, but also tries to close the goal by \"cheap\" (reducible) `rfl` afterwards.\n",
    "_type": "token"}],
  "_type": "sentence"},
 {"messages": [],
  "goals":
  [{"name": "",
    "hypotheses":
    [{"type": "Sort u₁", "names": ["α"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₂", "names": ["β"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₃", "names": ["φ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₄", "names": ["δ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₁", "names": ["ζ"], "body": "", "_type": "hypothesis"},
     {"type": "α → β", "names": ["f"], "body": "", "_type": "hypothesis"},
     {"type": "β → α", "names": ["g"], "body": "", "_type": "hypothesis"},
     {"type": "surjective f",
      "names": ["surjf"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "right_inverse f g",
      "names": ["rfg"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "β", "names": ["y"], "body": "", "_type": "hypothesis"},
     {"type": "α", "names": ["x"], "body": "", "_type": "hypothesis"},
     {"type": "f x = y", "names": ["hx"], "body": "", "_type": "hypothesis"}],
    "conclusion": "f (g (f x)) = f x",
    "_type": "goal"}],
  "contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": "← ",
    "link": null,
    "docstring":
    "`rw` is like `rewrite`, but also tries to close the goal by \"cheap\" (reducible) `rfl` afterwards.\n",
    "_type": "token"},
   {"typeinfo": {"type": "f x = y", "name": "hx", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "hx",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ",",
    "link": null,
    "docstring":
    "`rw` is like `rewrite`, but also tries to close the goal by \"cheap\" (reducible) `rfl` afterwards.\n",
    "_type": "token"}],
  "_type": "sentence"},
 {"messages": [],
  "goals":
  [{"name": "",
    "hypotheses":
    [{"type": "Sort u₁", "names": ["α"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₂", "names": ["β"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₃", "names": ["φ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₄", "names": ["δ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₁", "names": ["ζ"], "body": "", "_type": "hypothesis"},
     {"type": "α → β", "names": ["f"], "body": "", "_type": "hypothesis"},
     {"type": "β → α", "names": ["g"], "body": "", "_type": "hypothesis"},
     {"type": "surjective f",
      "names": ["surjf"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "right_inverse f g",
      "names": ["rfg"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "β", "names": ["y"], "body": "", "_type": "hypothesis"},
     {"type": "α", "names": ["x"], "body": "", "_type": "hypothesis"},
     {"type": "f x = y", "names": ["hx"], "body": "", "_type": "hypothesis"}],
    "conclusion": "f (g y) = y",
    "_type": "goal"}],
  "contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring":
    "`rw` is like `rewrite`, but also tries to close the goal by \"cheap\" (reducible) `rfl` afterwards.\n",
    "_type": "token"}],
  "_type": "sentence"},
 {"messages": [],
  "goals":
  [{"name": "",
    "hypotheses":
    [{"type": "Sort u₁", "names": ["α"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₂", "names": ["β"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₃", "names": ["φ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₄", "names": ["δ"], "body": "", "_type": "hypothesis"},
     {"type": "Sort u₁", "names": ["ζ"], "body": "", "_type": "hypothesis"},
     {"type": "α → β", "names": ["f"], "body": "", "_type": "hypothesis"},
     {"type": "β → α", "names": ["g"], "body": "", "_type": "hypothesis"},
     {"type": "surjective f",
      "names": ["surjf"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "right_inverse f g",
      "names": ["rfg"],
      "body": "",
      "_type": "hypothesis"},
     {"type": "β", "names": ["y"], "body": "", "_type": "hypothesis"},
     {"type": "α", "names": ["x"], "body": "", "_type": "hypothesis"},
     {"type": "f x = y", "names": ["hx"], "body": "", "_type": "hypothesis"}],
    "conclusion": "f x = f x",
    "_type": "goal"}],
  "contents":
  [{"typeinfo":
    {"type": "right_inverse f g", "name": "rfg", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "rfg",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "sentence"},
 {"messages": [],
  "goals":
  [{"name": "",
    "hypotheses": [],
    "conclusion": "Goals accomplished! 🐙",
    "_type": "goal"}],
  "contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": "]",
    "link": null,
    "docstring":
    "`rw` is like `rewrite`, but also tries to close the goal by \"cheap\" (reducible) `rfl` afterwards.\n",
    "_type": "token"}],
  "_type": "sentence"},
 {"contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "injective id", "name": "injective_id", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "injective_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α β : Sort u₁} → (α → β) → Prop",
     "name": "injective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective",
    "link": null,
    "docstring":
    "A function `f : α → β` is called injective if `f x = f y` implies `x = y`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (@",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") := ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Prop}, α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁}, surjective id",
     "name": "surjective_id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "surjective_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α β : Sort u₁} → (α → β) → Prop",
     "name": "surjective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective",
    "link": null,
    "docstring":
    "A function `f : α → β` is calles surjective if every `b : β` is equal to `f a`\nfor some `a : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (@",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") := λ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "⟩\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁}, bijective id",
     "name": "bijective_id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "bijective_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α β : Sort u₁} → (α → β) → Prop",
     "name": "bijective",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "bijective",
    "link": null,
    "docstring":
    "A function is called bijective if it is both injective and surjective. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (@",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Sort u₁} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Sort u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") := ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁}, injective id",
     "name": "injective_id",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "injective_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Sort u₁}, surjective id",
     "name": "surjective_id",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "surjective_id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "⟩\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "end",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " Function\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "namespace",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " Function\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "variable",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "Type (u₁ + 1)", "name": "Type u₁", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Type u₁",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "Type (u₂ + 1)", "name": "Type u₂", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Type u₂",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "Type (u₃ + 1)", "name": "Type u₃", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "Type u₃",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    "}\n\n/-- Interpret a function on `α × β` as a function with two arguments. -/\n@[inline] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "{α : Type u₁} → {β : Type u₂} → {φ : Type u₃} → (α × β → φ) → α → β → φ",
     "name": "curry",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "curry",
    "link": null,
    "docstring":
    "Interpret a function on `α × β` as a function with two arguments. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " × ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw":
    ")\n\n/-- Interpret a function with two arguments as a function on `α × β` -/\n@[inline] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "def",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "(α → β → φ) → α × β → φ", "name": "uncurry", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "uncurry",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " × ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\nλ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ".",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Type u₁} → {β : Type u₂} → α × β → α",
     "name": "1",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "1",
    "link": null,
    "docstring":
    "The first projection out of a pair. if `p : α × β` then `p.1 : α`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ".",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Type u₁} → {β : Type u₂} → α × β → β",
     "name": "2",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "2",
    "link": null,
    "docstring":
    "The second projection out of a pair. if `p : α × β` then `p.2 : β`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n@[",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "simp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ (f : α → β → φ), curry (uncurry f) = f",
     "name": "curry_uncurry",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "curry_uncurry",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "{α : Type u₁} → {β : Type u₂} → {φ : Type u₃} → (α × β → φ) → α → β → φ",
     "name": "curry",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "curry",
    "link": null,
    "docstring":
    "Interpret a function on `α × β` as a function with two arguments. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "{α : Type u₁} → {β : Type u₂} → {φ : Type u₃} → (α → β → φ) → α × β → φ",
     "name": "uncurry",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "uncurry",
    "link": null,
    "docstring":
    "Interpret a function with two arguments as a function on `α × β` ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Type (max (max u₁ u₂) u₃)} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n@[",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "simp",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "] ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ (f : α × β → φ), uncurry (curry f) = f",
     "name": "uncurry_curry",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "uncurry_curry",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " × ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₃", "name": "φ", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "φ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "{α : Type u₁} → {β : Type u₂} → {φ : Type u₃} → (α → β → φ) → α × β → φ",
     "name": "uncurry",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "uncurry",
    "link": null,
    "docstring":
    "Interpret a function with two arguments as a function on `α × β` ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "{α : Type u₁} → {β : Type u₂} → {φ : Type u₃} → (α × β → φ) → α → β → φ",
     "name": "curry",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "curry",
    "link": null,
    "docstring":
    "Interpret a function on `α × β` as a function with two arguments. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α × β → φ", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Type (max u₁ u₂)} {β : α → Type u₃} {f₁ f₂ : (x : α) → β x}, (∀ (x : α), f₁ x = f₂ x) → f₁ = f₂",
     "name": "funext",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "funext",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " (λ ⟨",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "text"},
 {"messages":
  [{"contents": "Warning: unused variable `a` [linter.unusedVariables]",
    "_type": "message"}],
  "goals": [],
  "contents":
  [{"typeinfo": {"type": "α", "name": "a", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "a",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "sentence"},
 {"contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": ", ",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "text"},
 {"messages":
  [{"contents": "Warning: unused variable `b` [linter.unusedVariables]",
    "_type": "message"}],
  "goals": [],
  "contents":
  [{"typeinfo": {"type": "β", "name": "b", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "b",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "sentence"},
 {"contents":
  [{"typeinfo": null,
    "semanticType": null,
    "raw": "⟩ => ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {α : Type u₃} {a : α}, a = a",
     "name": "rfl",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "rfl",
    "link": null,
    "docstring":
    "`rfl : a = a` is the unique constructor of the equality type. This is the\nsame as `Eq.refl` except that it takes `a` implicitly instead of explicitly.\n\nThis is a more powerful theorem than it may appear at first, because although\nthe statement of the theorem is `a = a`, lean will allow anything that is\ndefinitionally equal to that type. So, for instance, `2 + 2 = 4` is proven in\nlean by `rfl`, because both sides are the same up to definitional equality.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ")\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "protected",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "∀ {g : β → α} {f : α → β}, left_inverse g f → g ∘ f = id",
     "name": "left_inverse.id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "left_inverse.id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "left_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Type u₁} → {β : Type u₂} → (β → α) → (α → β) → Prop",
     "name": "left_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "left_inverse",
    "link": null,
    "docstring":
    "`left_inverse g f` means that g is a left inverse to f. That is, `g ∘ f = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Type u₁} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Type u₁} {β : α → Type u₁} {f₁ f₂ : (x : α) → β x}, (∀ (x : α), f₁ x = f₂ x) → f₁ = f₂",
     "name": "funext",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "funext",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "left_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "protected",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "theorem",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Type u₁} {β : Type u₂} {g : β → α} {f : α → β}, right_inverse g f → f ∘ g = id",
     "name": "right_inverse.id",
     "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "right_inverse.id",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} {",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₁", "name": "α", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "α",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " → ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "Type u₂", "name": "β", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "β",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "} (",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "right_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Type u₁} → {β : Type u₂} → (β → α) → (α → β) → Prop",
     "name": "right_inverse",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "right_inverse",
    "link": null,
    "docstring":
    "`right_inverse g f` means that g is a right inverse to f. That is, `f ∘ g = id`. ",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": ") : ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "α → β", "name": "f", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "f",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ∘ ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "β → α", "name": "g", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "g",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " = ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type": "{α : Type u₂} → α → α", "name": "id", "_type": "typeinfo"},
    "semanticType": null,
    "raw": "id",
    "link": null,
    "docstring":
    "The identity function. `id` takes an implicit argument `α : Sort u`\n(a type in any universe), and an argument `a : α`, and returns `a`.\n\nAlthough this may look like a useless function, one application of the identity\nfunction is to explicitly put a type on an expression. If `e` has type `T`,\nand `T'` is definitionally equal to `T`, then `@id T' e` typechecks, and lean\nknows that this expression has type `T'` rather than `T`. This can make a\ndifference for typeclass inference, since `T` and `T'` may have different\ntypeclass instances on them. `show T' from e` is sugar for an `@id T' e`\nexpression.\n",
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " :=\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo":
    {"type":
     "∀ {α : Type u₂} {β : α → Type u₂} {f₁ f₂ : (x : α) → β x}, (∀ (x : α), f₁ x = f₂ x) → f₁ = f₂",
     "name": "funext",
     "_type": "typeinfo"},
    "semanticType": null,
    "raw": "funext",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " ",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": {"type": "right_inverse g f", "name": "h", "_type": "typeinfo"},
    "semanticType": "Name.Variable",
    "raw": "h",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": "\n\n",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": "Keyword",
    "raw": "end",
    "link": null,
    "docstring": null,
    "_type": "token"},
   {"typeinfo": null,
    "semanticType": null,
    "raw": " Function\n",
    "link": null,
    "docstring": null,
    "_type": "token"}],
  "_type": "text"}]